version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: beach_booking_db
    environment:
      POSTGRES_DB: beach_booking
      POSTGRES_USER: beach_admin
      POSTGRES_PASSWORD: ${DB_PASSWORD:-beach_secure_pass}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - beach_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: beach_booking_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - beach_network
    restart: unless-stopped

  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: beach_booking_backend
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: beach_booking
      DB_USER: beach_admin
      DB_PASSWORD: ${DB_PASSWORD:-beach_secure_pass}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app/backend
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - beach_network
    restart: unless-stopped

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: beach_booking_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - beach_network
    restart: unless-stopped

  # pgAdmin (optional, for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: beach_booking_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@beach-booking.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_pass}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - beach_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  beach_network:
    driver: bridge